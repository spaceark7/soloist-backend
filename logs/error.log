{"level":"error","message":"Error: [object Object]"}
{"level":"error","message":"Error: [object Object]"}
{"level":"error","message":"Error: \nInvalid `prisma.user.create()` invocation:\n\n\nThe provided value for the column is too long for the column's type. Column: password"}
{"level":"error","message":"Error: \nInvalid `prisma.user.create()` invocation:\n\n\nUnique constraint failed on the constraint: `users_phone_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.user.create()` invocation:\n\n\nUnique constraint failed on the constraint: `users_phone_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.user.create()` invocation:\n\n\nUnique constraint failed on the constraint: `users_phone_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.user.create()` invocation:\n\n\nUnique constraint failed on the constraint: `users_phone_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.user.create()` invocation:\n\n\nUnique constraint failed on the constraint: `users_phone_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.user.create()` invocation:\n\n\nUnique constraint failed on the constraint: `users_phone_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.user.create()` invocation:\n\n\nUnique constraint failed on the constraint: `users_phone_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.user.create()` invocation:\n\n\nUnique constraint failed on the constraint: `users_phone_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.user.update()` invocation:\n\n{\n  where: {\n    activationToken: \"bf218907-fcc5-42f0-8e99-87e125e33812\",\n?   id?: Int,\n?   email?: String,\n?   phone?: String,\n?   AND?: UserWhereInput | UserWhereInput[],\n?   OR?: UserWhereInput[],\n?   NOT?: UserWhereInput | UserWhereInput[],\n?   name?: StringFilter | String,\n?   password?: StringFilter | String,\n?   avatar?: StringNullableFilter | String | Null,\n?   isActivated?: BoolFilter | Boolean,\n?   isDeleted?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   deletedAt?: DateTimeNullableFilter | DateTime | Null,\n?   business?: BusinessNullableRelationFilter | BusinessWhereInput | Null,\n?   address?: AddressNullableRelationFilter | AddressWhereInput | Null\n  },\n  data: {\n    isActivated: true\n  }\n}\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `email` or `phone` arguments. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.user.update()` invocation:\n\n{\n  where: {\n    activationToken: \"bf218907-fcc5-42f0-8e99-87e125e33812\",\n?   id?: Int,\n?   email?: String,\n?   phone?: String,\n?   AND?: UserWhereInput | UserWhereInput[],\n?   OR?: UserWhereInput[],\n?   NOT?: UserWhereInput | UserWhereInput[],\n?   name?: StringFilter | String,\n?   password?: StringFilter | String,\n?   avatar?: StringNullableFilter | String | Null,\n?   isActivated?: BoolFilter | Boolean,\n?   isDeleted?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   deletedAt?: DateTimeNullableFilter | DateTime | Null,\n?   business?: BusinessNullableRelationFilter | BusinessWhereInput | Null,\n?   address?: AddressNullableRelationFilter | AddressWhereInput | Null\n  },\n  data: {\n    isActivated: true\n  }\n}\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `email` or `phone` arguments. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.user.update()` invocation:\n\n{\n  where: {\n    activationToken: \"bf218907-fcc5-42f0-8e99-87e125e33812\",\n?   id?: Int,\n?   email?: String,\n?   phone?: String,\n?   AND?: UserWhereInput | UserWhereInput[],\n?   OR?: UserWhereInput[],\n?   NOT?: UserWhereInput | UserWhereInput[],\n?   name?: StringFilter | String,\n?   password?: StringFilter | String,\n?   avatar?: StringNullableFilter | String | Null,\n?   isActivated?: BoolFilter | Boolean,\n?   isDeleted?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   deletedAt?: DateTimeNullableFilter | DateTime | Null,\n?   business?: BusinessNullableRelationFilter | BusinessWhereInput | Null,\n?   address?: AddressNullableRelationFilter | AddressWhereInput | Null\n  },\n  data: {\n    isActivated: true\n  }\n}\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `email` or `phone` arguments. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.user.update()` invocation:\n\n{\n  where: {\n    activationToken: \"bf218907-fcc5-42f0-8e99-87e125e33812\",\n?   id?: Int,\n?   email?: String,\n?   phone?: String,\n?   AND?: UserWhereInput | UserWhereInput[],\n?   OR?: UserWhereInput[],\n?   NOT?: UserWhereInput | UserWhereInput[],\n?   name?: StringFilter | String,\n?   password?: StringFilter | String,\n?   avatar?: StringNullableFilter | String | Null,\n?   isActivated?: BoolFilter | Boolean,\n?   isDeleted?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   deletedAt?: DateTimeNullableFilter | DateTime | Null,\n?   business?: BusinessNullableRelationFilter | BusinessWhereInput | Null,\n?   address?: AddressNullableRelationFilter | AddressWhereInput | Null\n  },\n  data: {\n    isActivated: true\n  }\n}\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `email` or `phone` arguments. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.user.findUnique()` invocation:\n\n{\n  where: {\n    activationToken: \"bf218907-fcc5-42f0-8e99-87e125e33812\",\n?   id?: Int,\n?   email?: String,\n?   phone?: String,\n?   AND?: UserWhereInput | UserWhereInput[],\n?   OR?: UserWhereInput[],\n?   NOT?: UserWhereInput | UserWhereInput[],\n?   name?: StringFilter | String,\n?   password?: StringFilter | String,\n?   avatar?: StringNullableFilter | String | Null,\n?   isActivated?: BoolFilter | Boolean,\n?   isDeleted?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   deletedAt?: DateTimeNullableFilter | DateTime | Null,\n?   business?: BusinessNullableRelationFilter | BusinessWhereInput | Null,\n?   address?: AddressNullableRelationFilter | AddressWhereInput | Null\n  }\n}\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `email` or `phone` arguments. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.user.findUnique()` invocation:\n\n{\n  where: {\n    activationToken: \"bf218907-fcc5-42f0-8e99-87e125e33812\",\n?   id?: Int,\n?   email?: String,\n?   phone?: String,\n?   AND?: UserWhereInput | UserWhereInput[],\n?   OR?: UserWhereInput[],\n?   NOT?: UserWhereInput | UserWhereInput[],\n?   name?: StringFilter | String,\n?   password?: StringFilter | String,\n?   avatar?: StringNullableFilter | String | Null,\n?   isActivated?: BoolFilter | Boolean,\n?   isDeleted?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   deletedAt?: DateTimeNullableFilter | DateTime | Null,\n?   business?: BusinessNullableRelationFilter | BusinessWhereInput | Null,\n?   address?: AddressNullableRelationFilter | AddressWhereInput | Null\n  }\n}\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `email` or `phone` arguments. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.user.findUnique()` invocation:\n\n{\n  where: {\n    activationToken: \"bf218907-fcc5-42f0-8e99-87e125e33812\",\n?   id?: Int,\n?   email?: String,\n?   phone?: String,\n?   AND?: UserWhereInput | UserWhereInput[],\n?   OR?: UserWhereInput[],\n?   NOT?: UserWhereInput | UserWhereInput[],\n?   name?: StringFilter | String,\n?   password?: StringFilter | String,\n?   avatar?: StringNullableFilter | String | Null,\n?   isActivated?: BoolFilter | Boolean,\n?   isDeleted?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   deletedAt?: DateTimeNullableFilter | DateTime | Null,\n?   business?: BusinessNullableRelationFilter | BusinessWhereInput | Null,\n?   address?: AddressNullableRelationFilter | AddressWhereInput | Null\n  }\n}\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `email` or `phone` arguments. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.user.findUnique()` invocation:\n\n{\n  where: {\n    activationToken: \"bf218907-fcc5-42f0-8e99-87e125e33812\",\n?   id?: Int,\n?   email?: String,\n?   phone?: String,\n?   AND?: UserWhereInput | UserWhereInput[],\n?   OR?: UserWhereInput[],\n?   NOT?: UserWhereInput | UserWhereInput[],\n?   name?: StringFilter | String,\n?   password?: StringFilter | String,\n?   avatar?: StringNullableFilter | String | Null,\n?   isActivated?: BoolFilter | Boolean,\n?   isDeleted?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   deletedAt?: DateTimeNullableFilter | DateTime | Null,\n?   business?: BusinessNullableRelationFilter | BusinessWhereInput | Null,\n?   address?: AddressNullableRelationFilter | AddressWhereInput | Null\n  }\n}\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `email` or `phone` arguments. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.user.update()` invocation:\n\n{\n  where: {\n    activationToken: \"bf218907-fcc5-42f0-8e99-87e125e33812\",\n?   id?: Int,\n?   email?: String,\n?   phone?: String,\n?   AND?: UserWhereInput | UserWhereInput[],\n?   OR?: UserWhereInput[],\n?   NOT?: UserWhereInput | UserWhereInput[],\n?   name?: StringFilter | String,\n?   password?: StringFilter | String,\n?   avatar?: StringNullableFilter | String | Null,\n?   isActivated?: BoolFilter | Boolean,\n?   isDeleted?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   deletedAt?: DateTimeNullableFilter | DateTime | Null,\n?   business?: BusinessNullableRelationFilter | BusinessWhereInput | Null,\n?   address?: AddressNullableRelationFilter | AddressWhereInput | Null\n  },\n  data: {\n    isActivated: true\n  }\n}\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `email` or `phone` arguments. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.user.update()` invocation:\n\n{\n  where: {\n    activationToken: \"bf218907-fcc5-42f0-8e99-87e125e33812\",\n?   id?: Int,\n?   email?: String,\n?   phone?: String,\n?   AND?: UserWhereInput | UserWhereInput[],\n?   OR?: UserWhereInput[],\n?   NOT?: UserWhereInput | UserWhereInput[],\n?   name?: StringFilter | String,\n?   password?: StringFilter | String,\n?   avatar?: StringNullableFilter | String | Null,\n?   isActivated?: BoolFilter | Boolean,\n?   isDeleted?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   deletedAt?: DateTimeNullableFilter | DateTime | Null,\n?   business?: BusinessNullableRelationFilter | BusinessWhereInput | Null,\n?   address?: AddressNullableRelationFilter | AddressWhereInput | Null\n  },\n  data: {\n    isActivated: true\n  }\n}\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `email` or `phone` arguments. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.user.update()` invocation:\n\n{\n  where: {\n    activationToken: \"bf218907-fcc5-42f0-8e99-87e125e33812\",\n?   id?: Int,\n?   email?: String,\n?   phone?: String,\n?   AND?: UserWhereInput | UserWhereInput[],\n?   OR?: UserWhereInput[],\n?   NOT?: UserWhereInput | UserWhereInput[],\n?   name?: StringFilter | String,\n?   password?: StringFilter | String,\n?   avatar?: StringNullableFilter | String | Null,\n?   isActivated?: BoolFilter | Boolean,\n?   isDeleted?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   deletedAt?: DateTimeNullableFilter | DateTime | Null,\n?   business?: BusinessNullableRelationFilter | BusinessWhereInput | Null,\n?   address?: AddressNullableRelationFilter | AddressWhereInput | Null\n  },\n  data: {\n    isActivated: true\n  }\n}\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `email` or `phone` arguments. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.user.update()` invocation:\n\n\nThe provided value for the column is too long for the column's type. Column: refreshToken"}
{"level":"error","message":"Error: \nInvalid `prisma.user.update()` invocation:\n\n{\n  where: {\n    id: 1\n  },\n  data: {\n    address: {\n      upsert: {\n        create: {\n          userId: 1,\n          ~~~~~~\n          street: \"Gang Pelopor\",\n          city: \"Bekasi\",\n          province: \"West Java\",\n          country: \"Indonesia\",\n          businessId: null,\n          postalCode: null,\n          latitude: null,\n          longitude: null,\n?         isDeleted?: Boolean,\n?         createdAt?: DateTime,\n?         updatedAt?: DateTime,\n?         deletedAt?: DateTime | Null,\n?         business?: BusinessCreateNestedOneWithoutAddressInput\n        },\n        update: {\n          street: \"Gang Pelopor\",\n          city: \"Bekasi\",\n          province: \"West Java\",\n          country: \"Indonesia\",\n          postalCode: null,\n          latitude: null,\n          longitude: null\n        }\n      }\n    }\n  }\n}\n\nUnknown argument `userId`. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.user.update()` invocation:\n\n{\n  where: {\n    id: 1\n  },\n  data: {\n    address: {\n      upsert: {\n        create: {\n          userId: 1,\n          ~~~~~~\n          street: \"Gang Pelopor\",\n          city: \"Bekasi\",\n          province: \"West Java\",\n          country: \"Indonesia\",\n          businessId: null,\n          postalCode: null,\n          latitude: null,\n          longitude: null,\n?         isDeleted?: Boolean,\n?         createdAt?: DateTime,\n?         updatedAt?: DateTime,\n?         deletedAt?: DateTime | Null,\n?         business?: BusinessCreateNestedOneWithoutAddressInput\n        },\n        update: {\n          userId: 1,\n          street: \"Gang Pelopor\",\n          city: \"Bekasi\",\n          province: \"West Java\",\n          country: \"Indonesia\",\n          postalCode: null,\n          latitude: null,\n          longitude: null\n        }\n      }\n    }\n  }\n}\n\nUnknown argument `userId`. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.user.update()` invocation:\n\n{\n  where: {\n    id: 1\n  },\n  data: {\n    address: {\n      upsert: {\n        create: {\n          userId: 1,\n          ~~~~~~\n          street: \"Gang Pelopor\",\n          city: \"Bekasi\",\n          province: \"West Java\",\n          country: \"Indonesia\",\n          businessId: null,\n          postalCode: null,\n          latitude: null,\n          longitude: null,\n?         isDeleted?: Boolean,\n?         createdAt?: DateTime,\n?         updatedAt?: DateTime,\n?         deletedAt?: DateTime | Null,\n?         business?: BusinessCreateNestedOneWithoutAddressInput\n        },\n        update: {\n          userId: 1,\n          street: \"Gang Pelopor\",\n          city: \"Bekasi\",\n          province: \"West Java\",\n          country: \"Indonesia\",\n          postalCode: null,\n          latitude: null,\n          longitude: null\n        }\n      }\n    }\n  }\n}\n\nUnknown argument `userId`. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.user.update()` invocation:\n\n{\n  where: {\n    id: 1\n  },\n  data: {\n    address: {\n      upsert: {\n        create: {\n          userId: 1,\n          ~~~~~~\n          street: \"Gang Pelopor\",\n          city: \"Bekasi\",\n          province: \"West Java\",\n          country: \"Indonesia\",\n          businessId: null,\n          postalCode: null,\n          latitude: null,\n          longitude: null,\n?         isDeleted?: Boolean,\n?         createdAt?: DateTime,\n?         updatedAt?: DateTime,\n?         deletedAt?: DateTime | Null,\n?         business?: BusinessCreateNestedOneWithoutAddressInput\n        },\n        update: {\n          userId: 1,\n          street: \"Gang Pelopor\",\n          city: \"Bekasi\",\n          province: \"West Java\",\n          country: \"Indonesia\",\n          postalCode: null,\n          latitude: null,\n          longitude: null\n        }\n      }\n    }\n  }\n}\n\nUnknown argument `userId`. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.user.update()` invocation:\n\n{\n  where: {\n    id: 1\n  },\n  data: {\n    address: {\n      upsert: {\n        create: {\n          userId: 1,\n          ~~~~~~\n          street: \"Gang Pelopor\",\n          city: \"Bekasi\",\n          province: \"West Java\",\n          country: \"Indonesia\",\n          businessId: null,\n          postalCode: null,\n          latitude: null,\n          longitude: null,\n?         isDeleted?: Boolean,\n?         createdAt?: DateTime,\n?         updatedAt?: DateTime,\n?         deletedAt?: DateTime | Null,\n?         business?: BusinessCreateNestedOneWithoutAddressInput\n        },\n        update: {\n          street: \"Gang Pelopor\",\n          city: \"Bekasi\",\n          province: \"West Java\",\n          country: \"Indonesia\",\n          businessId: null,\n          postalCode: null,\n          latitude: null,\n          longitude: null\n        }\n      }\n    }\n  }\n}\n\nUnknown argument `userId`. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.business.create()` invocation:\n\n\nUnique constraint failed on the constraint: `businesses_userEmail_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.business.create()` invocation:\n\n{\n  data: {\n    userEmail: \"onix1453@gmail.com\",\n    business_name: \"Juragan Emas\",\n    address: {\n      connectOrCreate: {\n        where: {\n          userId: 1\n        },\n        create: {\n          province: null,\n          city: null,\n          street: null,\n+         country: String\n        }\n      }\n    },\n    business_phone: \"085722338109\",\n    business_email: null,\n    business_description: \"Jagonya bikin emas perhiasan\"\n  },\n  include: {\n    address: true\n  }\n}\n\nArgument `country` must not be null."}
{"level":"error","message":"Error: \nInvalid `prisma.business.create()` invocation:\n\n{\n  data: {\n    userEmail: \"onix1453@gmail.com\",\n    business_name: \"Juragan Emas\",\n    address: {\n      connectOrCreate: {\n        where: {\n          userId: undefined,\n?         id?: Int,\n?         businessId?: Int,\n?         AND?: AddressWhereInput | AddressWhereInput[],\n?         OR?: AddressWhereInput[],\n?         NOT?: AddressWhereInput | AddressWhereInput[],\n?         country?: StringFilter | String,\n?         province?: StringFilter | String,\n?         city?: StringFilter | String,\n?         street?: StringFilter | String,\n?         postalCode?: StringNullableFilter | String | Null,\n?         longitude?: FloatNullableFilter | Float | Null,\n?         latitude?: FloatNullableFilter | Float | Null,\n?         isDeleted?: BoolFilter | Boolean,\n?         createdAt?: DateTimeFilter | DateTime,\n?         updatedAt?: DateTimeFilter | DateTime,\n?         deletedAt?: DateTimeNullableFilter | DateTime | Null,\n?         user?: UserNullableRelationFilter | UserWhereInput | Null,\n?         business?: BusinessNullableRelationFilter | BusinessWhereInput | Null\n        },\n        create: {\n          country: null,\n          province: null,\n          city: null,\n          street: null\n        }\n      }\n    },\n    business_phone: \"085722338109\",\n    business_email: null,\n    business_description: \"Jagonya bikin emas perhiasan\"\n  },\n  include: {\n    address: true\n  }\n}\n\nArgument `where` of type AddressWhereUniqueInput needs at least one of `id`, `userId` or `businessId` arguments. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.business.create()` invocation:\n\n{\n  data: {\n    userEmail: \"onix1453@gmail.com\",\n    business_name: \"Juragan Emas\",\n    address: {\n      connectOrCreate: {\n        where: {\n          userId: undefined,\n?         id?: Int,\n?         businessId?: Int,\n?         AND?: AddressWhereInput | AddressWhereInput[],\n?         OR?: AddressWhereInput[],\n?         NOT?: AddressWhereInput | AddressWhereInput[],\n?         country?: StringFilter | String,\n?         province?: StringFilter | String,\n?         city?: StringFilter | String,\n?         street?: StringFilter | String,\n?         postalCode?: StringNullableFilter | String | Null,\n?         longitude?: FloatNullableFilter | Float | Null,\n?         latitude?: FloatNullableFilter | Float | Null,\n?         isDeleted?: BoolFilter | Boolean,\n?         createdAt?: DateTimeFilter | DateTime,\n?         updatedAt?: DateTimeFilter | DateTime,\n?         deletedAt?: DateTimeNullableFilter | DateTime | Null,\n?         user?: UserNullableRelationFilter | UserWhereInput | Null,\n?         business?: BusinessNullableRelationFilter | BusinessWhereInput | Null\n        },\n        create: {\n          country: null,\n          province: null,\n          city: null,\n          street: null\n        }\n      }\n    },\n    business_phone: \"085722338109\",\n    business_email: null,\n    business_description: \"Jagonya bikin emas perhiasan\"\n  },\n  select: {\n    address: true,\n    business_name: true\n  }\n}\n\nArgument `where` of type AddressWhereUniqueInput needs at least one of `id`, `userId` or `businessId` arguments. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.business.create()` invocation:\n\n{\n  data: {\n    userEmail: \"onix1453@gmail.com\",\n    business_name: \"Juragan Emas\",\n    address: {\n      connectOrCreate: {\n        where: {\n          userId: 1\n        },\n        create: {\n          province: null,\n          city: null,\n          street: null,\n+         country: String\n        }\n      }\n    },\n    business_phone: \"085722338109\",\n    business_email: null,\n    business_description: \"Jagonya bikin emas perhiasan\"\n  },\n  select: {\n    address: true,\n    business_name: true\n  }\n}\n\nArgument `country` must not be null."}
{"level":"error","message":"Error: \nInvalid `prisma.business.create()` invocation:\n\n{\n  data: {\n    userEmail: \"onix1453@gmail.com\",\n    business_name: \"Juragan Emas\",\n    address: {\n      connectOrCreate: {\n        where: {\n          userId: 1\n        },\n        create: {\n          province: null,\n          city: null,\n          street: null,\n+         country: String\n        }\n      }\n    },\n    business_phone: \"085722338109\",\n    business_email: null,\n    business_description: \"Jagonya bikin emas perhiasan\"\n  },\n  include: {\n    address: true\n  }\n}\n\nArgument `country` must not be null."}
{"level":"error","message":"Error: \nInvalid `prisma.business.create()` invocation:\n\n{\n  data: {\n    userEmail: \"onix1453@gmail.com\",\n    business_name: \"Juragan Emas\",\n    address: null,\n    business_phone: \"085722338109\",\n    business_email: null,\n    business_description: \"Jagonya bikin emas perhiasan\",\n+   user: {\n+     create: UserCreateWithoutBusinessInput | UserUncheckedCreateWithoutBusinessInput,\n+     connectOrCreate: UserCreateOrConnectWithoutBusinessInput,\n+     connect: UserWhereUniqueInput\n+   }\n  },\n  include: {\n    address: true\n  }\n}\n\nArgument `user` is missing."}
{"level":"error","message":"Error: \nInvalid `prisma.business.create()` invocation:\n\n\nUnique constraint failed on the constraint: `addresses_userId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.business.create()` invocation:\n\n\nUnique constraint failed on the constraint: `addresses_userId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.business.create()` invocation:\n\n\nUnique constraint failed on the constraint: `addresses_userId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.business.create()` invocation:\n\n\nUnique constraint failed on the constraint: `addresses_userId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.business.create()` invocation:\n\n\nUnique constraint failed on the constraint: `addresses_userId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.user.update()` invocation:\n\n{\n  where: {\n    id: 1\n  },\n  data: {\n    business: {\n      upsert: {\n        create: {\n          userEmail: \"onix1453@gmail.com\",\n          ~~~~~~~~~\n          business_name: \"Juragan Emas Kaya\",\n          address: {\n            create: {\n              city: \"Bekasi\",\n              country: \"Indonesia\",\n              postalCode: undefined,\n              province: \"West Java\",\n              street: \"Kranji\"\n            }\n          },\n          business_phone: \"085722338109\",\n          business_email: null,\n          business_description: \"Jagonya bikin emas perhiasan\",\n?         business_logo?: String | Null,\n?         isDeleted?: Boolean,\n?         createdAt?: DateTime,\n?         updatedAt?: DateTime,\n?         deletedAt?: DateTime | Null,\n?         product?: ProductCreateNestedManyWithoutBusinessInput\n        },\n        update: {\n          business_name: \"Juragan Emas Kaya\",\n          business_phone: \"085722338109\",\n          business_email: null,\n          business_description: \"Jagonya bikin emas perhiasan\"\n        }\n      }\n    }\n  },\n  include: {\n    address: true\n  }\n}\n\nUnknown argument `userEmail`. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.user.update()` invocation:\n\n{\n  where: {\n    id: 1\n  },\n  data: {\n    business: {\n      upsert: {\n        create: {\n          business_name: \"Juragan Emas Kaya\",\n          address: {\n            connectOrCreate: {\n              where: {\n                userId: undefined,\n?               id?: Int,\n?               businessId?: Int,\n?               AND?: AddressWhereInput | AddressWhereInput[],\n?               OR?: AddressWhereInput[],\n?               NOT?: AddressWhereInput | AddressWhereInput[],\n?               country?: StringFilter | String,\n?               province?: StringFilter | String,\n?               city?: StringFilter | String,\n?               street?: StringFilter | String,\n?               postalCode?: StringNullableFilter | String | Null,\n?               longitude?: FloatNullableFilter | Float | Null,\n?               latitude?: FloatNullableFilter | Float | Null,\n?               isDeleted?: BoolFilter | Boolean,\n?               createdAt?: DateTimeFilter | DateTime,\n?               updatedAt?: DateTimeFilter | DateTime,\n?               deletedAt?: DateTimeNullableFilter | DateTime | Null,\n?               user?: UserNullableRelationFilter | UserWhereInput | Null,\n?               business?: BusinessNullableRelationFilter | BusinessWhereInput | Null\n              },\n              create: {\n                userId: undefined,\n                street: \"Kranji\",\n                city: \"Bekasi\",\n                province: \"West Java\",\n                country: \"Indonesia\",\n                postalCode: undefined\n              }\n            }\n          },\n          business_phone: \"085722338109\",\n          business_email: null,\n          business_description: \"Jagonya bikin emas perhiasan\"\n        },\n        update: {\n          business_name: \"Juragan Emas Kaya\",\n          business_phone: \"085722338109\",\n          business_email: null,\n          business_description: \"Jagonya bikin emas perhiasan\"\n        }\n      }\n    },\n    address: {\n      upsert: {\n        create: {\n          userId: undefined,\n          street: \"Kranji\",\n          city: \"Bekasi\",\n          province: \"West Java\",\n          country: \"Indonesia\",\n          postalCode: undefined\n        },\n        update: {\n          street: \"Kranji\",\n          city: \"Bekasi\",\n          province: \"West Java\",\n          country: \"Indonesia\",\n          postalCode: undefined\n        }\n      }\n    }\n  },\n  select: {\n    business: true,\n    address: true\n  }\n}\n\nArgument `where` of type AddressWhereUniqueInput needs at least one of `id`, `userId` or `businessId` arguments. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.user.update()` invocation:\n\n{\n  where: {\n    id: 1\n  },\n  data: {\n    business: {\n      upsert: {\n        create: {\n          business_name: \"Juragan Emas Kaya\",\n          address: {\n            connectOrCreate: {\n              where: {\n                userId: undefined,\n?               id?: Int,\n?               businessId?: Int,\n?               AND?: AddressWhereInput | AddressWhereInput[],\n?               OR?: AddressWhereInput[],\n?               NOT?: AddressWhereInput | AddressWhereInput[],\n?               country?: StringFilter | String,\n?               province?: StringFilter | String,\n?               city?: StringFilter | String,\n?               street?: StringFilter | String,\n?               postalCode?: StringNullableFilter | String | Null,\n?               longitude?: FloatNullableFilter | Float | Null,\n?               latitude?: FloatNullableFilter | Float | Null,\n?               isDeleted?: BoolFilter | Boolean,\n?               createdAt?: DateTimeFilter | DateTime,\n?               updatedAt?: DateTimeFilter | DateTime,\n?               deletedAt?: DateTimeNullableFilter | DateTime | Null,\n?               user?: UserNullableRelationFilter | UserWhereInput | Null,\n?               business?: BusinessNullableRelationFilter | BusinessWhereInput | Null\n              },\n              create: {\n                userId: undefined,\n                street: \"Kranji\",\n                city: \"Bekasi\",\n                province: \"West Java\",\n                country: \"Indonesia\",\n                postalCode: undefined\n              }\n            }\n          },\n          business_phone: \"085722338109\",\n          business_email: null,\n          business_description: \"Jagonya bikin emas perhiasan\"\n        },\n        update: {\n          business_name: \"Juragan Emas Kaya\",\n          business_phone: \"085722338109\",\n          business_email: null,\n          business_description: \"Jagonya bikin emas perhiasan\"\n        }\n      }\n    },\n    address: {\n      upsert: {\n        create: {\n          street: \"Kranji\",\n          city: \"Bekasi\",\n          province: \"West Java\",\n          country: \"Indonesia\",\n          postalCode: undefined\n        },\n        update: {\n          street: \"Kranji\",\n          city: \"Bekasi\",\n          province: \"West Java\",\n          country: \"Indonesia\",\n          postalCode: undefined\n        }\n      }\n    }\n  },\n  select: {\n    business: true,\n    address: true\n  }\n}\n\nArgument `where` of type AddressWhereUniqueInput needs at least one of `id`, `userId` or `businessId` arguments. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.user.update()` invocation:\n\n{\n  where: {\n    id: 1\n  },\n  data: {\n    business: {\n      upsert: {\n        create: {\n          business_name: \"Juragan Emas Kaya\",\n          address: {\n            connectOrCreate: {\n              where: {\n                userId: undefined,\n?               id?: Int,\n?               businessId?: Int,\n?               AND?: AddressWhereInput | AddressWhereInput[],\n?               OR?: AddressWhereInput[],\n?               NOT?: AddressWhereInput | AddressWhereInput[],\n?               country?: StringFilter | String,\n?               province?: StringFilter | String,\n?               city?: StringFilter | String,\n?               street?: StringFilter | String,\n?               postalCode?: StringNullableFilter | String | Null,\n?               longitude?: FloatNullableFilter | Float | Null,\n?               latitude?: FloatNullableFilter | Float | Null,\n?               isDeleted?: BoolFilter | Boolean,\n?               createdAt?: DateTimeFilter | DateTime,\n?               updatedAt?: DateTimeFilter | DateTime,\n?               deletedAt?: DateTimeNullableFilter | DateTime | Null,\n?               user?: UserNullableRelationFilter | UserWhereInput | Null,\n?               business?: BusinessNullableRelationFilter | BusinessWhereInput | Null\n              },\n              create: {\n                userId: undefined,\n                street: \"Kranji\",\n                city: \"Bekasi\",\n                province: \"West Java\",\n                country: \"Indonesia\",\n                postalCode: undefined\n              }\n            }\n          },\n          business_phone: \"085722338109\",\n          business_email: null,\n          business_description: \"Jagonya bikin emas perhiasan\"\n        },\n        update: {\n          business_name: \"Juragan Emas Kaya\",\n          business_phone: \"085722338109\",\n          business_email: null,\n          business_description: \"Jagonya bikin emas perhiasan\"\n        }\n      }\n    },\n    address: {\n      upsert: {\n        where: {\n          userId: undefined\n        },\n        create: {\n          street: \"Kranji\",\n          city: \"Bekasi\",\n          province: \"West Java\",\n          country: \"Indonesia\",\n          postalCode: undefined\n        },\n        update: {\n          street: \"Kranji\",\n          city: \"Bekasi\",\n          province: \"West Java\",\n          country: \"Indonesia\",\n          postalCode: undefined\n        }\n      }\n    }\n  },\n  select: {\n    business: true,\n    address: true\n  }\n}\n\nArgument `where` of type AddressWhereUniqueInput needs at least one of `id`, `userId` or `businessId` arguments. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.user.update()` invocation:\n\n{\n  where: {\n    id: 1\n  },\n  data: {\n    business: {\n      upsert: {\n        create: {\n          business_name: \"Juragan Emas Kaya\",\n          address: {\n            connectOrCreate: {\n              where: {\n                userId: undefined,\n?               id?: Int,\n?               businessId?: Int,\n?               AND?: AddressWhereInput | AddressWhereInput[],\n?               OR?: AddressWhereInput[],\n?               NOT?: AddressWhereInput | AddressWhereInput[],\n?               country?: StringFilter | String,\n?               province?: StringFilter | String,\n?               city?: StringFilter | String,\n?               street?: StringFilter | String,\n?               postalCode?: StringNullableFilter | String | Null,\n?               longitude?: FloatNullableFilter | Float | Null,\n?               latitude?: FloatNullableFilter | Float | Null,\n?               isDeleted?: BoolFilter | Boolean,\n?               createdAt?: DateTimeFilter | DateTime,\n?               updatedAt?: DateTimeFilter | DateTime,\n?               deletedAt?: DateTimeNullableFilter | DateTime | Null,\n?               user?: UserNullableRelationFilter | UserWhereInput | Null,\n?               business?: BusinessNullableRelationFilter | BusinessWhereInput | Null\n              },\n              create: {\n                userId: undefined,\n                street: \"Kranji\",\n                city: \"Bekasi\",\n                province: \"West Java\",\n                country: \"Indonesia\",\n                postalCode: undefined\n              }\n            }\n          },\n          business_phone: \"085722338109\",\n          business_email: null,\n          business_description: \"Jagonya bikin emas perhiasan\"\n        },\n        update: {\n          business_name: \"Juragan Emas Kaya\",\n          business_phone: \"085722338109\",\n          business_email: null,\n          business_description: \"Jagonya bikin emas perhiasan\"\n        }\n      }\n    },\n    address: {\n      upsert: {\n        where: {\n          businessId: 12\n        },\n        create: {\n          street: \"Kranji\",\n          city: \"Bekasi\",\n          province: \"West Java\",\n          country: \"Indonesia\",\n          postalCode: undefined\n        },\n        update: {\n          street: \"Kranji\",\n          city: \"Bekasi\",\n          province: \"West Java\",\n          country: \"Indonesia\",\n          postalCode: undefined\n        }\n      }\n    }\n  },\n  select: {\n    business: true,\n    address: true\n  }\n}\n\nArgument `where` of type AddressWhereUniqueInput needs at least one of `id`, `userId` or `businessId` arguments. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n{\n  where: {\n    id: 1\n  },\n  data: {\n    business_name: \"Juragan Emas Kaya Raya\",\n    business_phone: \"085722338109\",\n    business_email: null,\n    business_description: \"Jagonya bikin emas perhiasan\",\n    address: {\n      upsert: {\n        create: {\n          country: \"Indonesia\",\n          city: \"Bekasi Barat\",\n          province: \"West Java\",\n          street: \"Gang Pelopor\"\n        },\n        update: {\n          street: \"Gang Pelopor\",\n          city: \"Bekasi Barat\",\n          province: \"West Java\",\n          country: \"Indonesia\",\n          postalCode: undefined\n        }\n      }\n    }\n  },\n  select: {\n    business: true,\n    ~~~~~~~~\n    address: true,\n?   id?: true,\n?   userEmail?: true,\n?   business_name?: true,\n?   business_phone?: true,\n?   business_email?: true,\n?   business_description?: true,\n?   business_logo?: true,\n?   isDeleted?: true,\n?   createdAt?: true,\n?   updatedAt?: true,\n?   deletedAt?: true,\n?   user?: true,\n?   product?: true,\n?   _count?: true\n  }\n}\n\nUnknown field `business` for select statement on model `Business`. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. No 'Business' record (needed to update inlined relation on 'Address') was found for a nested upsert on relation 'AddressToBusiness'."}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found."}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. No 'Address' record to connect was found for a nested connect on one-to-one relation 'AddressToBusiness'."}
{"level":"error","message":"Error: \nInvalid `prisma.user.update()` invocation:\n\n{\n  where: {\n    id: 1\n  },\n  data: {\n    name: \"Cody Stehr\",\n    email: \"Nova_DuBuque@gmail.com\",\n    phone: \"2510855555\",\n    avatar: \"https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/549.jpg\",\n    address: {\n      upsert: {\n        create: {\n          street: \"7727 Zachariah Corners\",\n          city: \"Leesburg\",\n          province: \"Kansas\",\n          country: \"Jordan\",\n          businessId: null,\n          postalCode: \"09087\",\n          latitude: null,\n          longitude: null\n        },\n+       update: AddressUpdateWithoutUserInput | AddressUncheckedUpdateWithoutUserInput\n      }\n    }\n  },\n  select: {\n    id: true,\n    name: true,\n    email: true,\n    phone: true,\n    avatar: true,\n    address: true\n  }\n}\n\nArgument `update` is missing."}
{"level":"error","message":"Error: \nInvalid `prisma.user.update()` invocation:\n\n{\n  where: {\n    id: 1\n  },\n  data: {\n    name: \"Cody Stehr\",\n    email: \"Nova_DuBuque@gmail.com\",\n    phone: \"2510855555\",\n    avatar: \"https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/549.jpg\",\n    address: {\n      upsert: {\n        create: {\n          userId: 1,\n          ~~~~~~\n          street: \"7727 Zachariah Corners\",\n          city: \"Leesburg\",\n          province: \"Kansas\",\n          country: \"Jordan\",\n          postalCode: \"09087\",\n          latitude: null,\n          longitude: null,\n?         isDeleted?: Boolean,\n?         createdAt?: DateTime,\n?         updatedAt?: DateTime,\n?         deletedAt?: DateTime | Null,\n?         business?: BusinessCreateNestedOneWithoutAddressInput\n        },\n        update: {\n          street: \"7727 Zachariah Corners\",\n          city: \"Leesburg\",\n          province: \"Kansas\",\n          country: \"Jordan\",\n          postalCode: \"09087\",\n          latitude: null,\n          longitude: null\n        }\n      }\n    }\n  },\n  select: {\n    id: true,\n    name: true,\n    email: true,\n    phone: true,\n    avatar: true,\n    address: true\n  }\n}\n\nUnknown argument `userId`. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.business.findUnique()` invocation:\n\n{\n  where: {\n    id: \"onix1453@gmail.com\"\n        ~~~~~~~~~~~~~~~~~~~~\n  },\n  select: {\n    id: true,\n    userId: true\n  }\n}\n\nArgument `id`: Invalid value provided. Expected Int, provided String."}
{"level":"error","message":"Error: \nInvalid `prisma.business.findUnique()` invocation:\n\n{\n  where: {\n    userEmail: \"onix1453@gmail.com\"\n  },\n  select: {\n    id: true,\n    userId: true,\n    ~~~~~~\n?   userEmail?: true,\n?   business_name?: true,\n?   business_phone?: true,\n?   business_email?: true,\n?   business_description?: true,\n?   business_logo?: true,\n?   isDeleted?: true,\n?   createdAt?: true,\n?   updatedAt?: true,\n?   deletedAt?: true,\n?   user?: true,\n?   product?: true,\n?   address?: true,\n?   _count?: true\n  }\n}\n\nUnknown field `userId` for select statement on model `Business`. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n{\n  where: {\n    id: 12\n  },\n  data: {\n    product: {\n      upsert: {\n        create: {\n          name: \"Bespoke Metal Bacon\",\n          description: \"New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart\",\n          image: \"https://loremflickr.com/640/480/food\",\n          cost: {\n            create: {\n              cost_threshold: 14939,\n              materials: {\n                createMany: {\n                  data: [\n                    {\n                      quantity: 88300,\n                      cost: 45,\n                      unit_price: \"424\",\n                      name: \"Steel\"\n                    },\n                    {\n                      quantity: 99000,\n                      cost: 342,\n                      unit_price: \"644\",\n                      name: \"Fresh\"\n                    },\n                    {\n                      quantity: 66111,\n                      cost: 977,\n                      unit_price: \"537\",\n                      name: \"Fresh\"\n                    },\n                    {\n                      quantity: 33294,\n                      cost: 875,\n                      unit_price: \"947\",\n                      name: \"Frozen\"\n                    },\n                    {\n                      quantity: 1590,\n                      cost: 917,\n                      unit_price: \"123\",\n                      name: \"Cotton\"\n                    }\n                  ]\n                }\n              },\n              average_cost: 309,\n              profit: 212,\n              selling_price: 785\n            }\n          }\n        },\n        update: {\n          name: \"Bespoke Metal Bacon\",\n          description: \"New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart\",\n          image: \"https://loremflickr.com/640/480/food\",\n          cost: {\n            update: {\n              cost_threshold: 14939,\n              materials: {\n                createMany: {\n                  data: [\n                    {\n                      quantity: 88300,\n                      cost: 45,\n                      unit_price: \"424\",\n                      name: \"Steel\"\n                    },\n                    {\n                      quantity: 99000,\n                      cost: 342,\n                      unit_price: \"644\",\n                      name: \"Fresh\"\n                    },\n                    {\n                      quantity: 66111,\n                      cost: 977,\n                      unit_price: \"537\",\n                      name: \"Fresh\"\n                    },\n                    {\n                      quantity: 33294,\n                      cost: 875,\n                      unit_price: \"947\",\n                      name: \"Frozen\"\n                    },\n                    {\n                      quantity: 1590,\n                      cost: 917,\n                      unit_price: \"123\",\n                      name: \"Cotton\"\n                    }\n                  ]\n                }\n              },\n              average_cost: 309,\n              profit: 212,\n              selling_price: 785\n            }\n          }\n        },\n+       where: {\n+         id: Int,\n+         AND: ProductWhereInput | ProductWhereInput[],\n+         OR: ProductWhereInput[],\n+         NOT: ProductWhereInput | ProductWhereInput[],\n+         businessId: IntFilter | Int,\n+         name: StringFilter | String,\n+         description: StringNullableFilter | String | Null,\n+         image: StringNullableFilter | String | Null,\n+         isDeleted: BoolFilter | Boolean,\n+         createdAt: DateTimeFilter | DateTime,\n+         updatedAt: DateTimeFilter | DateTime,\n+         deletedAt: DateTimeNullableFilter | DateTime | Null,\n+         business: BusinessRelationFilter | BusinessWhereInput,\n+         cost: ProductCostNullableRelationFilter | ProductCostWhereInput | Null\n+       }\n      }\n    }\n  }\n}\n\nArgument `where` is missing."}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n{\n  where: {\n    id: 12\n  },\n  data: {\n    product: {\n      upsert: {\n        create: {\n          name: \"Bespoke Metal Bacon\",\n          description: \"New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart\",\n          image: \"https://loremflickr.com/640/480/food\",\n          cost: {\n            create: {\n              cost_threshold: 14939,\n              materials: {\n                createMany: {\n                  data: [\n                    {\n                      quantity: 88300,\n                      cost: 45,\n                      unit_price: \"424\",\n                      name: \"Steel\"\n                    },\n                    {\n                      quantity: 99000,\n                      cost: 342,\n                      unit_price: \"644\",\n                      name: \"Fresh\"\n                    },\n                    {\n                      quantity: 66111,\n                      cost: 977,\n                      unit_price: \"537\",\n                      name: \"Fresh\"\n                    },\n                    {\n                      quantity: 33294,\n                      cost: 875,\n                      unit_price: \"947\",\n                      name: \"Frozen\"\n                    },\n                    {\n                      quantity: 1590,\n                      cost: 917,\n                      unit_price: \"123\",\n                      name: \"Cotton\"\n                    }\n                  ]\n                }\n              },\n              average_cost: 309,\n              profit: 212,\n              selling_price: 785\n            }\n          }\n        },\n        update: {\n          name: \"Bespoke Metal Bacon\",\n          description: \"New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart\",\n          image: \"https://loremflickr.com/640/480/food\",\n          cost: {\n            update: {\n              cost_threshold: 14939,\n              materials: {\n                createMany: {\n                  data: [\n                    {\n                      quantity: 88300,\n                      cost: 45,\n                      unit_price: \"424\",\n                      name: \"Steel\"\n                    },\n                    {\n                      quantity: 99000,\n                      cost: 342,\n                      unit_price: \"644\",\n                      name: \"Fresh\"\n                    },\n                    {\n                      quantity: 66111,\n                      cost: 977,\n                      unit_price: \"537\",\n                      name: \"Fresh\"\n                    },\n                    {\n                      quantity: 33294,\n                      cost: 875,\n                      unit_price: \"947\",\n                      name: \"Frozen\"\n                    },\n                    {\n                      quantity: 1590,\n                      cost: 917,\n                      unit_price: \"123\",\n                      name: \"Cotton\"\n                    }\n                  ]\n                }\n              },\n              average_cost: 309,\n              profit: 212,\n              selling_price: 785\n            }\n          }\n        },\n+       where: {\n+         id: Int,\n+         AND: ProductWhereInput | ProductWhereInput[],\n+         OR: ProductWhereInput[],\n+         NOT: ProductWhereInput | ProductWhereInput[],\n+         businessId: IntFilter | Int,\n+         name: StringFilter | String,\n+         description: StringNullableFilter | String | Null,\n+         image: StringNullableFilter | String | Null,\n+         isDeleted: BoolFilter | Boolean,\n+         createdAt: DateTimeFilter | DateTime,\n+         updatedAt: DateTimeFilter | DateTime,\n+         deletedAt: DateTimeNullableFilter | DateTime | Null,\n+         business: BusinessRelationFilter | BusinessWhereInput,\n+         cost: ProductCostNullableRelationFilter | ProductCostWhereInput | Null\n+       }\n      }\n    }\n  }\n}\n\nArgument `where` is missing."}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n{\n  where: {\n    id: 12\n  },\n  data: {\n    product: {\n      upsert: {\n        create: {\n          name: \"Bespoke Metal Bacon\",\n          description: \"New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart\",\n          image: \"https://loremflickr.com/640/480/food\",\n          cost: {\n            create: {\n              cost_threshold: 14939,\n              materials: {\n                createMany: {\n                  data: [\n                    {\n                      quantity: 88300,\n                      cost: 45,\n                      unit_price: \"424\",\n                      name: \"Steel\"\n                    },\n                    {\n                      quantity: 99000,\n                      cost: 342,\n                      unit_price: \"644\",\n                      name: \"Fresh\"\n                    },\n                    {\n                      quantity: 66111,\n                      cost: 977,\n                      unit_price: \"537\",\n                      name: \"Fresh\"\n                    },\n                    {\n                      quantity: 33294,\n                      cost: 875,\n                      unit_price: \"947\",\n                      name: \"Frozen\"\n                    },\n                    {\n                      quantity: 1590,\n                      cost: 917,\n                      unit_price: \"123\",\n                      name: \"Cotton\"\n                    }\n                  ]\n                }\n              },\n              average_cost: 309,\n              profit: 212,\n              selling_price: 785\n            }\n          }\n        },\n        update: {\n          name: \"Bespoke Metal Bacon\",\n          description: \"New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart\",\n          image: \"https://loremflickr.com/640/480/food\",\n          cost: {\n            update: {\n              cost_threshold: 14939,\n              materials: {\n                createMany: {\n                  data: [\n                    {\n                      quantity: 88300,\n                      cost: 45,\n                      unit_price: \"424\",\n                      name: \"Steel\"\n                    },\n                    {\n                      quantity: 99000,\n                      cost: 342,\n                      unit_price: \"644\",\n                      name: \"Fresh\"\n                    },\n                    {\n                      quantity: 66111,\n                      cost: 977,\n                      unit_price: \"537\",\n                      name: \"Fresh\"\n                    },\n                    {\n                      quantity: 33294,\n                      cost: 875,\n                      unit_price: \"947\",\n                      name: \"Frozen\"\n                    },\n                    {\n                      quantity: 1590,\n                      cost: 917,\n                      unit_price: \"123\",\n                      name: \"Cotton\"\n                    }\n                  ]\n                }\n              },\n              average_cost: 309,\n              profit: 212,\n              selling_price: 785\n            }\n          }\n        },\n+       where: {\n+         id: Int,\n+         AND: ProductWhereInput | ProductWhereInput[],\n+         OR: ProductWhereInput[],\n+         NOT: ProductWhereInput | ProductWhereInput[],\n+         businessId: IntFilter | Int,\n+         name: StringFilter | String,\n+         description: StringNullableFilter | String | Null,\n+         image: StringNullableFilter | String | Null,\n+         isDeleted: BoolFilter | Boolean,\n+         createdAt: DateTimeFilter | DateTime,\n+         updatedAt: DateTimeFilter | DateTime,\n+         deletedAt: DateTimeNullableFilter | DateTime | Null,\n+         business: BusinessRelationFilter | BusinessWhereInput,\n+         cost: ProductCostNullableRelationFilter | ProductCostWhereInput | Null\n+       }\n      }\n    }\n  }\n}\n\nArgument `where` is missing."}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n{\n  where: {\n    id: 12\n  },\n  data: {\n    product: {\n      upsert: {\n        where: {\n          businessId: 12,\n?         id?: Int,\n?         AND?: ProductWhereInput | ProductWhereInput[],\n?         OR?: ProductWhereInput[],\n?         NOT?: ProductWhereInput | ProductWhereInput[],\n?         name?: StringFilter | String,\n?         description?: StringNullableFilter | String | Null,\n?         image?: StringNullableFilter | String | Null,\n?         isDeleted?: BoolFilter | Boolean,\n?         createdAt?: DateTimeFilter | DateTime,\n?         updatedAt?: DateTimeFilter | DateTime,\n?         deletedAt?: DateTimeNullableFilter | DateTime | Null,\n?         business?: BusinessRelationFilter | BusinessWhereInput,\n?         cost?: ProductCostNullableRelationFilter | ProductCostWhereInput | Null\n        },\n        create: {\n          name: \"Bespoke Metal Bacon\",\n          description: \"New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart\",\n          image: \"https://loremflickr.com/640/480/food\",\n          cost: {\n            create: {\n              cost_threshold: 14939,\n              materials: {\n                createMany: {\n                  data: [\n                    {\n                      quantity: 88300,\n                      cost: 45,\n                      unit_price: \"424\",\n                      name: \"Steel\"\n                    },\n                    {\n                      quantity: 99000,\n                      cost: 342,\n                      unit_price: \"644\",\n                      name: \"Fresh\"\n                    },\n                    {\n                      quantity: 66111,\n                      cost: 977,\n                      unit_price: \"537\",\n                      name: \"Fresh\"\n                    },\n                    {\n                      quantity: 33294,\n                      cost: 875,\n                      unit_price: \"947\",\n                      name: \"Frozen\"\n                    },\n                    {\n                      quantity: 1590,\n                      cost: 917,\n                      unit_price: \"123\",\n                      name: \"Cotton\"\n                    }\n                  ]\n                }\n              },\n              average_cost: 309,\n              profit: 212,\n              selling_price: 785\n            }\n          }\n        },\n        update: {\n          name: \"Bespoke Metal Bacon\",\n          description: \"New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart\",\n          image: \"https://loremflickr.com/640/480/food\",\n          cost: {\n            update: {\n              cost_threshold: 14939,\n              materials: {\n                createMany: {\n                  data: [\n                    {\n                      quantity: 88300,\n                      cost: 45,\n                      unit_price: \"424\",\n                      name: \"Steel\"\n                    },\n                    {\n                      quantity: 99000,\n                      cost: 342,\n                      unit_price: \"644\",\n                      name: \"Fresh\"\n                    },\n                    {\n                      quantity: 66111,\n                      cost: 977,\n                      unit_price: \"537\",\n                      name: \"Fresh\"\n                    },\n                    {\n                      quantity: 33294,\n                      cost: 875,\n                      unit_price: \"947\",\n                      name: \"Frozen\"\n                    },\n                    {\n                      quantity: 1590,\n                      cost: 917,\n                      unit_price: \"123\",\n                      name: \"Cotton\"\n                    }\n                  ]\n                }\n              },\n              average_cost: 309,\n              profit: 212,\n              selling_price: 785\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nArgument `where` of type ProductWhereUniqueInput needs at least one of `id` arguments. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n{\n  where: {\n    userEmail: \"onix1453@gmail.com\"\n  },\n  data: {\n    product: {\n      upsert: {\n        where: {\n          businessId: 12,\n?         id?: Int,\n?         AND?: ProductWhereInput | ProductWhereInput[],\n?         OR?: ProductWhereInput[],\n?         NOT?: ProductWhereInput | ProductWhereInput[],\n?         name?: StringFilter | String,\n?         description?: StringNullableFilter | String | Null,\n?         image?: StringNullableFilter | String | Null,\n?         isDeleted?: BoolFilter | Boolean,\n?         createdAt?: DateTimeFilter | DateTime,\n?         updatedAt?: DateTimeFilter | DateTime,\n?         deletedAt?: DateTimeNullableFilter | DateTime | Null,\n?         business?: BusinessRelationFilter | BusinessWhereInput,\n?         cost?: ProductCostNullableRelationFilter | ProductCostWhereInput | Null\n        },\n        create: {\n          name: \"Bespoke Metal Bacon\",\n          description: \"New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart\",\n          image: \"https://loremflickr.com/640/480/food\",\n          cost: {\n            create: {\n              cost_threshold: 14939,\n              average_cost: 309,\n              profit: 212,\n              selling_price: 785\n            }\n          }\n        },\n        update: {\n          name: \"Bespoke Metal Bacon\",\n          description: \"New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart\",\n          image: \"https://loremflickr.com/640/480/food\",\n          cost: {\n            update: {\n              cost_threshold: 14939,\n              average_cost: 309,\n              profit: 212,\n              selling_price: 785\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nArgument `where` of type ProductWhereUniqueInput needs at least one of `id` arguments. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n{\n  where: {\n    userEmail: \"onix1453@gmail.com\"\n  },\n  data: {\n    product: {\n      upsert: {\n        where: {\n          businessId: 12,\n?         id?: Int,\n?         AND?: ProductWhereInput | ProductWhereInput[],\n?         OR?: ProductWhereInput[],\n?         NOT?: ProductWhereInput | ProductWhereInput[],\n?         name?: StringFilter | String,\n?         description?: StringNullableFilter | String | Null,\n?         image?: StringNullableFilter | String | Null,\n?         isDeleted?: BoolFilter | Boolean,\n?         createdAt?: DateTimeFilter | DateTime,\n?         updatedAt?: DateTimeFilter | DateTime,\n?         deletedAt?: DateTimeNullableFilter | DateTime | Null,\n?         business?: BusinessRelationFilter | BusinessWhereInput,\n?         cost?: ProductCostNullableRelationFilter | ProductCostWhereInput | Null\n        },\n        create: {\n          name: \"Bespoke Metal Bacon\",\n          description: \"New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart\",\n          image: \"https://loremflickr.com/640/480/food\",\n          cost: {\n            create: {\n              cost_threshold: 14939,\n              average_cost: 309,\n              profit: 212,\n              selling_price: 785\n            }\n          }\n        },\n        update: {\n          name: \"Bespoke Metal Bacon\",\n          description: \"New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart\",\n          image: \"https://loremflickr.com/640/480/food\",\n          cost: {\n            update: {\n              cost_threshold: 14939,\n              average_cost: 309,\n              profit: 212,\n              selling_price: 785\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nArgument `where` of type ProductWhereUniqueInput needs at least one of `id` arguments. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n{\n  where: {\n    id: 12\n  },\n  data: {\n    product: {\n      upsert: {\n        where: {\n          businessId: 12,\n?         id?: Int,\n?         AND?: ProductWhereInput | ProductWhereInput[],\n?         OR?: ProductWhereInput[],\n?         NOT?: ProductWhereInput | ProductWhereInput[],\n?         name?: StringFilter | String,\n?         description?: StringNullableFilter | String | Null,\n?         image?: StringNullableFilter | String | Null,\n?         isDeleted?: BoolFilter | Boolean,\n?         createdAt?: DateTimeFilter | DateTime,\n?         updatedAt?: DateTimeFilter | DateTime,\n?         deletedAt?: DateTimeNullableFilter | DateTime | Null,\n?         business?: BusinessRelationFilter | BusinessWhereInput,\n?         cost?: ProductCostNullableRelationFilter | ProductCostWhereInput | Null\n        },\n        create: {\n          name: \"Bespoke Metal Bacon\",\n          description: \"New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart\",\n          image: \"https://loremflickr.com/640/480/food\",\n          cost: {\n            create: {\n              cost_threshold: 14939,\n              average_cost: 309,\n              profit: 212,\n              selling_price: 785\n            }\n          }\n        },\n        update: {\n          name: \"Bespoke Metal Bacon\",\n          description: \"New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart\",\n          image: \"https://loremflickr.com/640/480/food\",\n          cost: {\n            update: {\n              cost_threshold: 14939,\n              average_cost: 309,\n              profit: 212,\n              selling_price: 785\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nArgument `where` of type ProductWhereUniqueInput needs at least one of `id` arguments. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n{\n  where: {\n    id: 12\n  },\n  data: {\n    product: {\n      upsert: {\n        where: {\n          businessId: 12,\n?         id?: Int,\n?         AND?: ProductWhereInput | ProductWhereInput[],\n?         OR?: ProductWhereInput[],\n?         NOT?: ProductWhereInput | ProductWhereInput[],\n?         name?: StringFilter | String,\n?         description?: StringNullableFilter | String | Null,\n?         image?: StringNullableFilter | String | Null,\n?         isDeleted?: BoolFilter | Boolean,\n?         createdAt?: DateTimeFilter | DateTime,\n?         updatedAt?: DateTimeFilter | DateTime,\n?         deletedAt?: DateTimeNullableFilter | DateTime | Null,\n?         business?: BusinessRelationFilter | BusinessWhereInput,\n?         cost?: ProductCostNullableRelationFilter | ProductCostWhereInput | Null\n        },\n        create: {\n          name: \"Bespoke Metal Bacon\",\n          description: \"New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart\",\n          image: \"https://loremflickr.com/640/480/food\",\n          cost: {\n            create: {\n              cost_threshold: 14939,\n              average_cost: 309,\n              profit: 212,\n              selling_price: 785\n            }\n          }\n        },\n        update: {\n          name: \"Bespoke Metal Bacon\",\n          description: \"New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart\",\n          image: \"https://loremflickr.com/640/480/food\",\n          cost: {\n            update: {\n              cost_threshold: 14939,\n              average_cost: 309,\n              profit: 212,\n              selling_price: 785\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nArgument `where` of type ProductWhereUniqueInput needs at least one of `id` arguments. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n{\n  where: {\n    id: 12\n  },\n  data: {\n    product: {\n      upsert: {\n        where: {\n          businessId: 12,\n?         id?: Int,\n?         AND?: ProductWhereInput | ProductWhereInput[],\n?         OR?: ProductWhereInput[],\n?         NOT?: ProductWhereInput | ProductWhereInput[],\n?         name?: StringFilter | String,\n?         description?: StringNullableFilter | String | Null,\n?         image?: StringNullableFilter | String | Null,\n?         isDeleted?: BoolFilter | Boolean,\n?         createdAt?: DateTimeFilter | DateTime,\n?         updatedAt?: DateTimeFilter | DateTime,\n?         deletedAt?: DateTimeNullableFilter | DateTime | Null,\n?         business?: BusinessRelationFilter | BusinessWhereInput,\n?         cost?: ProductCostNullableRelationFilter | ProductCostWhereInput | Null\n        },\n        create: {\n          name: \"Bespoke Metal Bacon\",\n          description: \"New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart\",\n          image: \"https://loremflickr.com/640/480/food\"\n        },\n        update: {\n          name: \"Bespoke Metal Bacon\",\n          description: \"New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart\",\n          image: \"https://loremflickr.com/640/480/food\",\n          cost: {\n            update: {\n              cost_threshold: 14939,\n              average_cost: 309,\n              profit: 212,\n              selling_price: 785\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nArgument `where` of type ProductWhereUniqueInput needs at least one of `id` arguments. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n{\n  where: {\n    id: 12\n  },\n  data: {\n    product: {\n      upsert: {\n        where: {\n          businessId: 12,\n?         id?: Int,\n?         AND?: ProductWhereInput | ProductWhereInput[],\n?         OR?: ProductWhereInput[],\n?         NOT?: ProductWhereInput | ProductWhereInput[],\n?         name?: StringFilter | String,\n?         description?: StringNullableFilter | String | Null,\n?         image?: StringNullableFilter | String | Null,\n?         isDeleted?: BoolFilter | Boolean,\n?         createdAt?: DateTimeFilter | DateTime,\n?         updatedAt?: DateTimeFilter | DateTime,\n?         deletedAt?: DateTimeNullableFilter | DateTime | Null,\n?         business?: BusinessRelationFilter | BusinessWhereInput,\n?         cost?: ProductCostNullableRelationFilter | ProductCostWhereInput | Null\n        },\n        create: {\n          name: \"Bespoke Metal Bacon\",\n          description: \"New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart\",\n          image: \"https://loremflickr.com/640/480/food\"\n        },\n        update: {\n          name: \"Bespoke Metal Bacon\",\n          description: \"New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart\",\n          image: \"https://loremflickr.com/640/480/food\"\n        }\n      }\n    }\n  }\n}\n\nArgument `where` of type ProductWhereUniqueInput needs at least one of `id` arguments. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n{\n  where: {\n    id: 12\n  },\n  data: {\n    product: {\n      upsert: {\n        create: {\n          name: \"Bespoke Metal Bacon\",\n          description: \"New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart\",\n          image: \"https://loremflickr.com/640/480/food\",\n          cost: {\n            create: {\n              cost_threshold: 14939,\n              average_cost: 309,\n              profit: 212,\n              selling_price: 785\n            }\n          }\n        },\n        update: {\n          name: \"Bespoke Metal Bacon\",\n          description: \"New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart\",\n          image: \"https://loremflickr.com/640/480/food\",\n          cost: {\n            update: {\n              cost_threshold: 14939,\n              average_cost: 309,\n              profit: 212,\n              selling_price: 785\n            }\n          }\n        },\n+       where: {\n+         id: Int,\n+         AND: ProductWhereInput | ProductWhereInput[],\n+         OR: ProductWhereInput[],\n+         NOT: ProductWhereInput | ProductWhereInput[],\n+         businessId: IntFilter | Int,\n+         name: StringFilter | String,\n+         description: StringNullableFilter | String | Null,\n+         image: StringNullableFilter | String | Null,\n+         isDeleted: BoolFilter | Boolean,\n+         createdAt: DateTimeFilter | DateTime,\n+         updatedAt: DateTimeFilter | DateTime,\n+         deletedAt: DateTimeNullableFilter | DateTime | Null,\n+         business: BusinessRelationFilter | BusinessWhereInput,\n+         cost: ProductCostNullableRelationFilter | ProductCostWhereInput | Null\n+       }\n      }\n    }\n  }\n}\n\nArgument `where` is missing."}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n{\n  where: {\n    id: 12\n  },\n  data: {\n    product: {\n      upsert: {\n        where: {\n          businessId: 12,\n?         id?: Int,\n?         AND?: ProductWhereInput | ProductWhereInput[],\n?         OR?: ProductWhereInput[],\n?         NOT?: ProductWhereInput | ProductWhereInput[],\n?         name?: StringFilter | String,\n?         description?: StringNullableFilter | String | Null,\n?         image?: StringNullableFilter | String | Null,\n?         isDeleted?: BoolFilter | Boolean,\n?         createdAt?: DateTimeFilter | DateTime,\n?         updatedAt?: DateTimeFilter | DateTime,\n?         deletedAt?: DateTimeNullableFilter | DateTime | Null,\n?         business?: BusinessRelationFilter | BusinessWhereInput,\n?         cost?: ProductCostNullableRelationFilter | ProductCostWhereInput | Null\n        },\n        create: {\n          name: \"Bespoke Metal Bacon\",\n          description: \"New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart\",\n          image: \"https://loremflickr.com/640/480/food\",\n          cost: {\n            create: {\n              cost_threshold: 14939,\n              average_cost: 309,\n              profit: 212,\n              selling_price: 785\n            }\n          }\n        },\n        update: {\n          name: \"Bespoke Metal Bacon\",\n          description: \"New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart\",\n          image: \"https://loremflickr.com/640/480/food\",\n          cost: {\n            update: {\n              cost_threshold: 14939,\n              average_cost: 309,\n              profit: 212,\n              selling_price: 785\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nArgument `where` of type ProductWhereUniqueInput needs at least one of `id` arguments. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n{\n  where: {\n    id: 12\n  },\n  data: {\n    product: {\n      upsert: {\n        where: {\n          businessId: 12,\n?         id?: Int,\n?         AND?: ProductWhereInput | ProductWhereInput[],\n?         OR?: ProductWhereInput[],\n?         NOT?: ProductWhereInput | ProductWhereInput[],\n?         name?: StringFilter | String,\n?         description?: StringNullableFilter | String | Null,\n?         image?: StringNullableFilter | String | Null,\n?         isDeleted?: BoolFilter | Boolean,\n?         createdAt?: DateTimeFilter | DateTime,\n?         updatedAt?: DateTimeFilter | DateTime,\n?         deletedAt?: DateTimeNullableFilter | DateTime | Null,\n?         business?: BusinessRelationFilter | BusinessWhereInput,\n?         cost?: ProductCostNullableRelationFilter | ProductCostWhereInput | Null\n        },\n        create: {\n          name: \"Bespoke Metal Bacon\",\n          description: \"New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart\",\n          image: \"https://loremflickr.com/640/480/food\",\n          cost: {\n            create: {\n              cost_threshold: 14939,\n              average_cost: 309,\n              profit: 212,\n              selling_price: 785\n            }\n          }\n        },\n        update: {\n          name: \"Bespoke Metal Bacon\",\n          description: \"New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart\",\n          image: \"https://loremflickr.com/640/480/food\",\n          cost: {\n            update: {\n              cost_threshold: 14939,\n              average_cost: 309,\n              profit: 212,\n              selling_price: 785\n            }\n          }\n        }\n      }\n    }\n  },\n  include: {\n    product: true\n  }\n}\n\nArgument `where` of type ProductWhereUniqueInput needs at least one of `id` arguments. Available options are listed in green."}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n{\n  where: {\n    id: 12\n  },\n  data: {\n    product: {\n      create: {\n        name: \"Electronic Soft Tuna\",\n        description: \"New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016\",\n        image: \"https://loremflickr.com/640/480/food\",\n        cost: {\n          create: {\n            cost_threshold: 6064,\n            materials: {\n              createMany: {\n                data: [\n                  {\n                    quantity: 81311,\n                    cost: 313,\n                    unit_price: \"150\",\n                    name: \"Concrete\"\n                  },\n                  {\n                    quantity: 97346,\n                    cost: 517,\n                    unit_price: \"711\",\n                    name: \"Cotton\"\n                  },\n                  {\n                    quantity: 48172,\n                    cost: 227,\n                    unit_price: \"237\",\n                    name: \"Rubber\"\n                  }\n                ]\n              }\n            },\n            average_cost: 404,\n            profit: 346,\n            selling_price: 122\n          }\n        }\n      }\n    }\n  }\n}\n\nArgument `unit_price`: Invalid value provided. Expected Float, provided String."}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n\nUnique constraint failed on the constraint: `product_materials_productCostId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n\nUnique constraint failed on the constraint: `product_materials_productCostId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n\nUnique constraint failed on the constraint: `product_materials_productCostId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n\nUnique constraint failed on the constraint: `product_materials_productCostId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n\nUnique constraint failed on the constraint: `product_materials_productCostId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n{\n  where: {\n    id: 12\n  },\n  data: {\n    product: {\n      create: {\n        name: \"Awesome Bronze Shoes\",\n        description: \"Carbonite web goalkeeper gloves are ergonomically designed to give easy fit\",\n        image: \"https://loremflickr.com/640/480/food\",\n        cost: {\n          create: {\n            cost_threshold: 16933,\n            materials: {\n              create: {\n                data: [\n                  {\n                    name: \"Metal\",\n                    unit_price: 291,\n                    cost: 162,\n                    quantity: 54836\n                  },\n                  {\n                    name: \"Granite\",\n                    unit_price: 675,\n                    cost: 113,\n                    quantity: 40724\n                  },\n                  {\n                    name: \"Fresh\",\n                    unit_price: 639,\n                    cost: 651,\n                    quantity: 14923\n                  },\n                  {\n                    name: \"Concrete\",\n                    unit_price: 725,\n                    cost: 940,\n                    quantity: 93955\n                  }\n                ],\n+               name: String\n              }\n            },\n            average_cost: 617,\n            profit: 402,\n            selling_price: 619\n          }\n        }\n      }\n    }\n  },\n  include: {\n    product: {\n      include: {\n        cost: {\n          include: {\n            materials: true\n          }\n        }\n      }\n    }\n  }\n}\n\nArgument `name` is missing."}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n{\n  where: {\n    id: 12\n  },\n  data: {\n    product: {\n      create: {\n        name: \"Awesome Bronze Shoes\",\n        description: \"Carbonite web goalkeeper gloves are ergonomically designed to give easy fit\",\n        image: \"https://loremflickr.com/640/480/food\",\n        cost: {\n          create: {\n            cost_threshold: 16933,\n            materials: {\n              create: {\n                data: [\n                  {\n                    name: \"Metal\",\n                    unit_price: 291,\n                    cost: 162,\n                    quantity: 54836\n                  },\n                  {\n                    name: \"Granite\",\n                    unit_price: 675,\n                    cost: 113,\n                    quantity: 40724\n                  },\n                  {\n                    name: \"Fresh\",\n                    unit_price: 639,\n                    cost: 651,\n                    quantity: 14923\n                  },\n                  {\n                    name: \"Concrete\",\n                    unit_price: 725,\n                    cost: 940,\n                    quantity: 93955\n                  }\n                ],\n+               name: String\n              }\n            },\n            average_cost: 617,\n            profit: 402,\n            selling_price: 619\n          }\n        }\n      }\n    }\n  },\n  include: {\n    product: {\n      include: {\n        cost: {\n          include: {\n            materials: true\n          }\n        }\n      }\n    }\n  }\n}\n\nArgument `name` is missing."}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n\nUnique constraint failed on the constraint: `product_materials_productCostId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n{\n  where: {\n    id: 12\n  },\n  data: {\n    product: {\n      create: {\n        name: \"Awesome Bronze Shoes\",\n        description: \"Carbonite web goalkeeper gloves are ergonomically designed to give easy fit\",\n        image: \"https://loremflickr.com/640/480/food\",\n        cost: {\n          create: {\n            cost_threshold: 16933,\n            materials: {\n              create: {\n                data: [\n                  {\n                    name: \"Metal\",\n                    unit_price: 291,\n                    cost: 162,\n                    quantity: 54836\n                  },\n                  {\n                    name: \"Granite\",\n                    unit_price: 675,\n                    cost: 113,\n                    quantity: 40724\n                  },\n                  {\n                    name: \"Fresh\",\n                    unit_price: 639,\n                    cost: 651,\n                    quantity: 14923\n                  },\n                  {\n                    name: \"Concrete\",\n                    unit_price: 725,\n                    cost: 940,\n                    quantity: 93955\n                  }\n                ],\n+               name: String\n              }\n            },\n            average_cost: 617,\n            profit: 402,\n            selling_price: 619\n          }\n        }\n      }\n    }\n  },\n  include: {\n    product: {\n      include: {\n        cost: {\n          include: {\n            materials: true\n          }\n        }\n      }\n    }\n  }\n}\n\nArgument `name` is missing."}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n{\n  where: {\n    id: 12\n  },\n  data: {\n    product: {\n      create: {\n        name: \"Awesome Bronze Shoes\",\n        description: \"Carbonite web goalkeeper gloves are ergonomically designed to give easy fit\",\n        image: \"https://loremflickr.com/640/480/food\",\n        cost: {\n          create: {\n            cost_threshold: 16933,\n            materials: {\n              create: {\n                data: [\n                  {\n                    name: \"Metal\",\n                    unit_price: 291,\n                    cost: 162,\n                    quantity: 54836\n                  },\n                  {\n                    name: \"Granite\",\n                    unit_price: 675,\n                    cost: 113,\n                    quantity: 40724\n                  },\n                  {\n                    name: \"Fresh\",\n                    unit_price: 639,\n                    cost: 651,\n                    quantity: 14923\n                  },\n                  {\n                    name: \"Concrete\",\n                    unit_price: 725,\n                    cost: 940,\n                    quantity: 93955\n                  }\n                ],\n+               name: String\n              }\n            },\n            average_cost: 617,\n            profit: 402,\n            selling_price: 619\n          }\n        }\n      }\n    }\n  },\n  include: {\n    product: {\n      include: {\n        cost: {\n          include: {\n            materials: true\n          }\n        }\n      }\n    }\n  }\n}\n\nArgument `name` is missing."}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n{\n  where: {\n    id: 12\n  },\n  data: {\n    product: {\n      create: {\n        name: \"Awesome Bronze Shoes\",\n        description: \"Carbonite web goalkeeper gloves are ergonomically designed to give easy fit\",\n        image: \"https://loremflickr.com/640/480/food\",\n        cost: {\n          create: {\n            cost_threshold: 16933,\n            materials: {\n              create: {\n                data: [\n                  {\n                    name: \"Metal\",\n                    unit_price: 291,\n                    cost: 162,\n                    quantity: 54836\n                  }\n                ],\n+               name: String\n              }\n            },\n            average_cost: 617,\n            profit: 402,\n            selling_price: 619\n          }\n        }\n      }\n    }\n  },\n  include: {\n    product: {\n      include: {\n        cost: {\n          include: {\n            materials: true\n          }\n        }\n      }\n    }\n  }\n}\n\nArgument `name` is missing."}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n{\n  where: {\n    id: 12\n  },\n  data: {\n    product: {\n      create: {\n        name: \"Awesome Bronze Shoes\",\n        description: \"Carbonite web goalkeeper gloves are ergonomically designed to give easy fit\",\n        image: \"https://loremflickr.com/640/480/food\",\n        cost: {\n          create: {\n            cost_threshold: 16933,\n            materials: {\n              create: {\n                data: [\n                  {\n                    name: \"Metal\",\n                    unit_price: 291,\n                    cost: 162,\n                    quantity: 54836\n                  }\n                ],\n+               name: String\n              }\n            },\n            average_cost: 617,\n            profit: 402,\n            selling_price: 619\n          }\n        }\n      }\n    }\n  },\n  include: {\n    product: {\n      include: {\n        cost: {\n          include: {\n            materials: true\n          }\n        }\n      }\n    }\n  }\n}\n\nArgument `name` is missing."}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n{\n  where: {\n    id: 12\n  },\n  data: {\n    product: {\n      create: {\n        name: \"Fantastic Wooden Hat\",\n        description: \"The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J\",\n        image: \"https://loremflickr.com/640/480/food\",\n        cost: {\n          create: {\n            cost_threshold: 99460,\n            materials: {\n              create: {\n                data: [\n                  {\n                    name: \"Bronze\",\n                    unit_price: 474,\n                    cost: 803,\n                    quantity: 83162\n                  },\n                  {\n                    name: \"Granite\",\n                    unit_price: 803,\n                    cost: 186,\n                    quantity: 51471\n                  },\n                  {\n                    name: \"Granite\",\n                    unit_price: 754,\n                    cost: 701,\n                    quantity: 46786\n                  },\n                  {\n                    name: \"Fresh\",\n                    unit_price: 571,\n                    cost: 98,\n                    quantity: 57874\n                  },\n                  {\n                    name: \"Plastic\",\n                    unit_price: 858,\n                    cost: 113,\n                    quantity: 77250\n                  }\n                ],\n+               name: String\n              }\n            },\n            average_cost: 753,\n            profit: 662,\n            selling_price: 429\n          }\n        }\n      }\n    }\n  },\n  include: {\n    product: {\n      include: {\n        cost: {\n          include: {\n            materials: true\n          }\n        }\n      }\n    }\n  }\n}\n\nArgument `name` is missing."}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n\nUnique constraint failed on the constraint: `product_materials_productCostId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n{\n  where: {\n    id: 12\n  },\n  data: {\n    product: {\n      create: {\n        name: \"Fantastic Wooden Hat\",\n        description: \"The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J\",\n        image: \"https://loremflickr.com/640/480/food\",\n        cost: {\n          create: {\n            cost_threshold: 99460,\n            materials: {\n              createMany: [\n                {\n                  name: \"Bronze\",\n                  unit_price: 474,\n                  cost: 803,\n                  quantity: 83162\n                },\n                {\n                  name: \"Granite\",\n                  unit_price: 803,\n                  cost: 186,\n                  quantity: 51471\n                },\n                {\n                  name: \"Granite\",\n                  unit_price: 754,\n                  cost: 701,\n                  quantity: 46786\n                },\n                {\n                  name: \"Fresh\",\n                  unit_price: 571,\n                  cost: 98,\n                  quantity: 57874\n                },\n                {\n                  name: \"Plastic\",\n                  unit_price: 858,\n                  cost: 113,\n                  quantity: 77250\n                }\n              ]\n              ~~~~~~~~~~~~~~~~~~~\n            },\n            average_cost: 753,\n            profit: 662,\n            selling_price: 429\n          }\n        }\n      }\n    }\n  },\n  include: {\n    product: {\n      include: {\n        cost: {\n          include: {\n            materials: true\n          }\n        }\n      }\n    }\n  }\n}\n\nArgument `createMany`: Invalid value provided. Expected MaterialCreateManyProductCostInputEnvelope, provided (Object, Object, Object, Object, Object)."}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n\nUnique constraint failed on the constraint: `product_materials_productCostId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n\nUnique constraint failed on the constraint: `product_materials_productCostId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n{\n  where: {\n    id: 12\n  },\n  data: {\n    product: {\n      create: {\n        name: \"Ergonomic Metal Keyboard\",\n        description: \"The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality\",\n        image: \"https://loremflickr.com/640/480/food\",\n        cost: {\n          create: {\n            cost_threshold: 61724,\n            materials: {\n              create: [\n                [\n                  {\n                    name: \"Frozen\",\n                    unit_price: 501,\n                    cost: 390,\n                    quantity: 3159\n                  },\n                  {\n                    name: \"Soft\",\n                    unit_price: 569,\n                    cost: 572,\n                    quantity: 17556\n                  },\n                  {\n                    name: \"Fresh\",\n                    unit_price: 733,\n                    cost: 783,\n                    quantity: 77087\n                  },\n                  {\n                    name: \"Metal\",\n                    unit_price: 614,\n                    cost: 501,\n                    quantity: 40127\n                  },\n                  {\n                    name: \"Frozen\",\n                    unit_price: 929,\n                    cost: 258,\n                    quantity: 8365\n                  }\n                ]\n              ]\n              ~~~~~~~~~~~~~~~~~~~~~\n            },\n            average_cost: 701,\n            profit: 927,\n            selling_price: 187\n          }\n        }\n      }\n    }\n  },\n  include: {\n    product: {\n      include: {\n        cost: {\n          include: {\n            materials: true\n          }\n        }\n      }\n    }\n  }\n}\n\nArgument `create`: Invalid value provided. Expected MaterialCreateWithoutProductCostInput or MaterialUncheckedCreateWithoutProductCostInput, provided (Object, Object, Object, Object, Object)."}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n\nUnique constraint failed on the constraint: `product_materials_productCostId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.product.create()` invocation:\n\n{\n  data: {\n    businessId: 12,\n    name: \"Ergonomic Metal Keyboard\",\n    description: \"The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality\",\n    image: \"https://loremflickr.com/640/480/food\",\n    cost: {\n      create: {\n        cost_threshold: 61724,\n        average_cost: 701,\n        profit: 927,\n        selling_price: 187,\n        materials: {\n          createMany: [\n            {\n              name: \"Frozen\",\n              unit_price: 501,\n              cost: 390,\n              quantity: 3159\n            },\n            {\n              name: \"Soft\",\n              unit_price: 569,\n              cost: 572,\n              quantity: 17556\n            },\n            {\n              name: \"Fresh\",\n              unit_price: 733,\n              cost: 783,\n              quantity: 77087\n            },\n            {\n              name: \"Metal\",\n              unit_price: 614,\n              cost: 501,\n              quantity: 40127\n            },\n            {\n              name: \"Frozen\",\n              unit_price: 929,\n              cost: 258,\n              quantity: 8365\n            }\n          ]\n          ~~~~~~~~~~~~~~~~~~~\n        }\n      }\n    }\n  },\n  include: {\n    cost: {\n      include: {\n        materials: true\n      }\n    }\n  }\n}\n\nArgument `createMany`: Invalid value provided. Expected MaterialCreateManyProductCostInputEnvelope, provided (Object, Object, Object, Object, Object)."}
{"level":"error","message":"Error: \nInvalid `prisma.product.create()` invocation:\n\n\nUnique constraint failed on the constraint: `product_materials_productCostId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.product.create()` invocation:\n\n\nUnique constraint failed on the constraint: `product_materials_productCostId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.product.create()` invocation:\n\n\nUnique constraint failed on the constraint: `product_materials_productCostId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.product.create()` invocation:\n\n\nUnique constraint failed on the constraint: `product_materials_productCostId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.product.create()` invocation:\n\n\nUnique constraint failed on the constraint: `product_materials_productCostId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.product.create()` invocation:\n\n{\n  data: {\n    name: \"Intelligent Frozen Shirt\",\n    description: \"New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart\",\n    image: \"https://loremflickr.com/640/480/food\",\n    cost: {\n      create: {\n        cost_threshold: 34426,\n        average_cost: 937,\n        profit: 972,\n        selling_price: 856\n      }\n    },\n+   business: {\n+     create: BusinessCreateWithoutProductInput | BusinessUncheckedCreateWithoutProductInput,\n+     connectOrCreate: BusinessCreateOrConnectWithoutProductInput,\n+     connect: BusinessWhereUniqueInput\n+   }\n  }\n}\n\nArgument `business` is missing."}
{"level":"error","message":"Error: \nInvalid `prisma.productCost.update()` invocation:\n\n\nUnique constraint failed on the constraint: `product_materials_productCostId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.productCost.update()` invocation:\n\n\nUnique constraint failed on the constraint: `product_materials_productCostId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.productCost.update()` invocation:\n\n\nUnique constraint failed on the constraint: `product_materials_productCostId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.productCost.update()` invocation:\n\n\nUnique constraint failed on the constraint: `product_materials_productCostId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.productCost.update()` invocation:\n\n\nUnique constraint failed on the constraint: `product_materials_productCostId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.productCost.update()` invocation:\n\n\nUnique constraint failed on the constraint: `product_materials_productCostId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.productCost.update()` invocation:\n\n\nUnique constraint failed on the constraint: `product_materials_productCostId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.productCost.update()` invocation:\n\n\nUnique constraint failed on the constraint: `product_materials_productCostId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.productCost.update()` invocation:\n\n\nUnique constraint failed on the constraint: `product_materials_productCostId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.productCost.update()` invocation:\n\n\nUnique constraint failed on the constraint: `product_materials_productCostId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.productCost.update()` invocation:\n\n\nUnique constraint failed on the constraint: `product_materials_productCostId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.productCost.update()` invocation:\n\n\nUnique constraint failed on the constraint: `product_materials_productCostId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.productCost.update()` invocation:\n\n\nUnique constraint failed on the constraint: `product_materials_productCostId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.productCost.update()` invocation:\n\n\nUnique constraint failed on the constraint: `product_materials_productCostId_key`"}
{"level":"error","message":"Error: \nInvalid `prisma.business.update()` invocation:\n\n{\n  where: {\n    id: 1\n  },\n  data: {\n    product: {\n      create: {\n        name: \"Fantastic Rubber Computer\",\n        description: \"The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients\",\n        image: \"https://loremflickr.com/640/480/food\",\n        cost: {\n          create: {\n            cost_threshold: 70510,\n            average_cost: 809,\n            profit: 996,\n            selling_price: 361,\n            materials: {\n              createMany: [\n                {\n                  name: \"Steel\",\n                  unit_price: 427,\n                  cost: 539,\n                  quantity: 60392\n                },\n                {\n                  name: \"Soft\",\n                  unit_price: 251,\n                  cost: 188,\n                  quantity: 4086\n                }\n              ]\n              ~~~~~~~~~~~~~~~~~~~\n            }\n          }\n        }\n      }\n    }\n  },\n  include: {\n    product: {\n      include: {\n        cost: {\n          include: {\n            materials: true\n          }\n        }\n      }\n    }\n  }\n}\n\nArgument `createMany`: Invalid value provided. Expected MaterialCreateManyProductCostInputEnvelope, provided (Object, Object)."}
{"level":"error","message":"Error: \nInvalid `prisma.product.create()` invocation:\n\n\nUnknown nested field 'product' for operation createOneProduct does not match any query."}
{"level":"error","message":"Error: \nInvalid `prisma.product.create()` invocation:\n\n\nUnknown nested field 'product' for operation createOneProduct does not match any query."}
{"level":"error","message":"Error: \nInvalid `prisma.product.create()` invocation:\n\n{\n  data: {\n    create: {\n      name: \"Practical Fresh Chicken\",\n      description: \"The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive\",\n      image: \"https://loremflickr.com/640/480/food\",\n      cost: {\n        create: {\n          cost_threshold: 39170,\n          average_cost: 983,\n          profit: 562,\n          selling_price: 675,\n          materials: {\n            createMany: {\n              data: [\n                {\n                  name: \"Fresh\",\n                  unit_price: 83,\n                  cost: 284,\n                  quantity: 54603\n                },\n                {\n                  name: \"Concrete\",\n                  unit_price: 615,\n                  cost: 741,\n                  quantity: 77209\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n+   name: String\n  },\n  include: {\n    cost: {\n      include: {\n        materials: true\n      }\n    }\n  }\n}\n\nArgument `name` is missing."}
